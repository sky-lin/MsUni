@model MsUni.Models.Candidate

@{
    ViewBag.Title = "Apply";
}

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")

<h2>Apply</h2>

<body onbeforeunload="return cacheData()" onload="return readData()">

    <div class="form-horizontal">

        <form action="Apply" method="post" id="applyForm">
            @Html.AntiForgeryToken()
            <h4>Candidate</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.University, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.University, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.University, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

        </form>

        @using (Html.BeginForm("Upload", "Candidates", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                @Html.Label("Image", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="test" />
                    <p>
                        <input type="submit" value="Upload" name="type" />
                    </p>
                    @using (Html.BeginForm("GetImageByUser", "Candidates", FormMethod.Get, new { enctype = "multipart/form-data" }))
                {
                        <img src="@Url.Action("GetImageByUser", "Candidates", new { type = "Upload" })" />
                    }
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit"
                        form="applyForm"
                        onclick="javascript:getElementById(this.getAttribute('form')).submit();">
                    Submit
                </button>
            </div>
        </div>

    </div>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    <script type="text/javascript">
        function cacheData() {
        sessionStorage.setItem("name", $('#Name').val());
        sessionStorage.setItem("Age", $('#Age').val());
        sessionStorage.setItem("City", $('#City').val());
        sessionStorage.setItem("Mobile", $('#Mobile').val());
        sessionStorage.setItem("University", $('#University').val());
        sessionStorage.setItem("Email", $('#Email').val());
    }
    </script>

    <script type="text/javascript">
        function readData() {
        var name = sessionStorage.getItem("name");
        if (name !== null) $('#Name').val(name);
        var Age = sessionStorage.getItem("Age");
        if (Age !== null) $('#Age').val(Age);
        var City = sessionStorage.getItem("City");
        if (City !== null) $('#City').val(City);
        var Mobile = sessionStorage.getItem("Mobile");
        if (Mobile !== null) $('#Mobile').val(Mobile);
        var University = sessionStorage.getItem("University");
        if (University !== null) $('#University').val(University);
        var Email = sessionStorage.getItem("Email");
        if (Email !== null) $('#Email').val(Email);
    }
    </script>

</body>